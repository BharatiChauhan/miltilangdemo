
name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres

        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: root
          PGDATABASE: mydb
          PGPORT: 5432

    steps:
     - uses: actions/checkout@v3
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
     - name: Build with Maven
       run: mvn clean install

     - name: Run database migrations
       run: |
              psql -h $PGHOST -U $PGUSER -d $PGDATABASE -p $PGPORT -f migrations.sql

     - name: Cleanup temporary data
       run: |
              psql -h $PGHOST -U $PGUSER -d $PGDATABASE -p $PGPORT -c "DROP TABLE IF EXISTS temp_data"

     - name: Build & push Docker image
       uses: mr-smithers-excellent/docker-build-push@v6
       with:
          image: bharati03/github-action
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
     - name: Update dependency graph
       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
